{"version":3,"sources":["Components/Toolbar.js","Components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Toolbar","props","state","editMode","handleActivityClick","bind","handleDecisionClick","handleRemove","handleSave","e","this","addActivity","addDecision","remove","save","className","onClick","decisionEnabled","Component","Sidebar","list","items","map","item","idx","key","task","x","y","type","placeholder","App","decisionOption","width","height","color","lines","startPoint","lineTo","draw","canvas","document","getElementById","getContext","ctx","clearRect","fillStyle","fillRect","shape","i","length","beginPath","moveTo","stroke","refIndex","spacing","newItem","newLine","setState","newItems","newLines","pop","console","log","window","addEventListener","event","id","style","border","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.db0c241c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Toolbar.scss'\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      editMode: false,\n    }\n    this.handleActivityClick = this.handleActivityClick.bind(this)\n    this.handleDecisionClick = this.handleDecisionClick.bind(this)\n    this.handleRemove = this.handleRemove.bind(this)\n    this.handleSave = this.handleSave.bind(this)\n  }\n  handleActivityClick(e) {\n    this.props.addActivity()\n  }\n  handleDecisionClick(e) {\n    this.props.addDecision()\n  }\n  handleRemove(e) {\n    this.props.remove()\n  }\n  handleSave(e) {\n    this.props.save()\n  }\n\n  render() {\n    if (true) {\n      return (\n        <div className='Toolbar'>\n          <div className='Toolbar-add-options'>\n            <div onClick={this.handleActivityClick} className='btn special'>\n              Add Activity\n            </div>\n            <div\n              onClick={\n                this.props.decisionEnabled ? this.handleDecisionClick : null\n              }\n              className='btn special'\n            >\n              Add Decision\n            </div>\n          </div>\n          <div className='Toolbar-edit-options'>\n            <div onClick={this.handleRemove} className='btn'>\n              Undo\n            </div>\n            <div onClick={this.handleSave} className='btn mr-0'>\n              Save\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return <div>test</div>\n    }\n  }\n}\n\nexport default Toolbar\n","import React, { Component } from 'react'\nimport './Sidebar.scss'\n\nclass Sidebar extends Component {\n  render() {\n    let { items } = this.props\n    let list = items.map((item, idx) => {\n      return (\n        <li key={idx} className='Activity'>\n          Task: {item.task}, [x:{item.x},y:{item.y}]\n        </li>\n      )\n    })\n\n    return (\n      <div className='Sidebar'>\n        <div className='Sidebar-search mt-3'>\n          <input type='text' placeholder='SEARCH' />\n        </div>\n        <div className='Sidebar-items mt-5'>\n          <ul>{list}</ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\nimport './App.css'\nimport Toolbar from './Components/Toolbar'\nimport Sidebar from './Components/Sidebar'\n\nconst WIDTH_ACTIVITY_BOX = 120\nconst HEIGHT_ACTIVITY_BOX = 60\nconst ACTIVITY_BOX_COLOR = 'blue'\nconst WIDTH_DESICION_BOX = 60\nconst HEIGHT_DESICION_BOX = 60\nconst DESICION_BOX_COLOR = 'green'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      decisionOption: true,\n      items: [\n        {\n          x: 10,\n          y: 100,\n          width: WIDTH_ACTIVITY_BOX,\n          height: HEIGHT_ACTIVITY_BOX,\n          task: 'activity',\n          color: ACTIVITY_BOX_COLOR,\n        },\n      ],\n      lines: [\n        {\n          startPoint: [130, 130],\n          lineTo: [130, 130],\n        },\n      ],\n    }\n    this.draw = this.draw.bind(this)\n    this.addActivity = this.addActivity.bind(this)\n    this.addDecision = this.addDecision.bind(this)\n    this.remove = this.remove.bind(this)\n    this.save = this.save.bind(this)\n  }\n  draw() {\n    const canvas = document.getElementById('myCanvas')\n    if (canvas.getContext) {\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      ctx.fillStyle = 'white'\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n      //draw boxes\n      for (let shape of this.state.items) {\n        ctx.fillStyle = shape.color\n        ctx.fillRect(shape.x, shape.y, shape.width, shape.height)\n      }\n      //draw lines\n      for (let i = 0; i < this.state.lines.length; i++) {\n        let { startPoint, lineTo } = this.state.lines[i]\n        ctx.beginPath()\n        ctx.moveTo(...startPoint)\n        ctx.lineTo(...lineTo)\n        ctx.stroke()\n      }\n    }\n  }\n  addActivity() {\n    let { items, lines } = this.state\n    let refIndex = this.state.items.length - 1\n    let { x, y, task } = this.state.items[refIndex]\n    let spacing = task === 'decision' ? 50 : 100\n    let length = task === 'decision' ? 60 : 120\n    let newItem = {\n      x: x + length + spacing,\n      y: 100,\n      width: WIDTH_ACTIVITY_BOX,\n      height: HEIGHT_ACTIVITY_BOX,\n      task: 'activity',\n      color: ACTIVITY_BOX_COLOR,\n    }\n    let newLine = {\n      startPoint: [x + length, 100 + 30],\n      lineTo: [x + spacing + length, 100 + 30],\n    }\n    this.setState(\n      {\n        items: [...items, newItem],\n        lines: [...lines, newLine],\n        decisionOption: true,\n      },\n      () => {\n        this.draw()\n      }\n    )\n  }\n\n  addDecision() {\n    let { items, lines } = this.state\n    let refIndex = this.state.items.length - 1\n    let { x, y, width, height, task } = this.state.items[refIndex]\n    //bug catch\n    if (task === 'decision') {\n      return\n    }\n    let spacing = 100\n    let newItem = {\n      x: x + 60 + spacing,\n      y: 100,\n      width: WIDTH_DESICION_BOX,\n      height: HEIGHT_DESICION_BOX,\n      task: 'decision',\n      color: DESICION_BOX_COLOR,\n    }\n    let newLine = {\n      startPoint: [x + 120, 100 + 30],\n      lineTo: [x + spacing + 60, 100 + 30],\n    }\n    this.setState(\n      {\n        items: [...items, newItem],\n        lines: [...lines, newLine],\n        decisionOption: false,\n      },\n      () => {\n        this.draw()\n      }\n    )\n  }\n  remove() {\n    if (this.state.items.length <= 1) {\n      return\n    }\n    let newItems = [...this.state.items]\n    let newLines = [...this.state.lines]\n    newItems.pop()\n    console.log(newItems)\n    newLines.pop()\n    this.setState(\n      {\n        items: [...newItems],\n        lines: [...newLines],\n        decisionOption: true,\n      },\n      () => {\n        console.log('now')\n        this.draw()\n      }\n    )\n  }\n\n  save() {\n    console.log('save firing')\n  }\n\n  componentDidMount() {\n    this.draw()\n\n    window.addEventListener('click', function (event) {\n      console.log(event)\n    })\n  }\n  render() {\n    return (\n      <div className='App container mt-5'>\n        <div className='small-screen-text d-flex-col text-center p-5'>\n          <p>Browser window is too small</p>\n          <p className='pt-4'>Please open on a desktop browser</p>\n          <p className='pt-4'>\n            {' '}\n            If you are using a desktop browser, please resize your browser\n            window\n          </p>\n        </div>\n        <div className='row main mb-5'>\n          <div className='col-9'>\n            <Toolbar\n              decisionEnabled={this.state.decisionOption}\n              addDecision={this.addDecision}\n              addActivity={this.addActivity}\n              remove={this.remove}\n              save={this.save}\n            />\n            <canvas\n              id='myCanvas'\n              width='800'\n              height='500'\n              style={{ border: '1px solid' }}\n            ></canvas>\n          </div>\n          <div className='main col-3'>\n            <Sidebar items={this.state.items} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}