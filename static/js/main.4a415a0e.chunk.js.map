{"version":3,"sources":["Components/Toolbar.js","Components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Toolbar","props","state","editMode","handleActivityClick","bind","handleDecisionClick","handleRemove","handleSave","e","this","addActivity","addDecision","remove","save","decisionEnabled","className","onClick","Component","Sidebar","searchText","handleChange","evt","setState","target","value","list","items","filteredList","filter","el","task","indexOf","toLowerCase","length","map","item","idx","key","x","y","onChange","type","placeholder","App","decisionOption","draw","addFirstActivity","canvas","document","getElementById","getContext","ctx","clearRect","width","height","fillStyle","fillRect","number","shape","strokeRect","color","font","fillText","i","lines","startPoint","lineTo","beginPath","moveTo","stroke","console","log","refIndex","spacing","newItem","newLine","newItems","newLines","pop","window","localStorage","setItem","JSON","stringify","id","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4a415a0e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Toolbar.scss'\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      editMode: false,\n    }\n    this.handleActivityClick = this.handleActivityClick.bind(this)\n    this.handleDecisionClick = this.handleDecisionClick.bind(this)\n    this.handleRemove = this.handleRemove.bind(this)\n    this.handleSave = this.handleSave.bind(this)\n  }\n  handleActivityClick(e) {\n    this.props.addActivity()\n  }\n  handleDecisionClick(e) {\n    this.props.addDecision()\n  }\n  handleRemove(e) {\n    this.props.remove()\n  }\n  handleSave(e) {\n    this.props.save()\n  }\n\n  render() {\n    const { decisionEnabled } = this.props\n    return (\n      <div className='Toolbar'>\n        <div className='Toolbar-add-options'>\n          <div onClick={this.handleActivityClick} className='btn special'>\n            Add Activity\n          </div>\n          <div\n            onClick={\n              decisionEnabled ? this.handleDecisionClick : null\n            }\n            className={`btn special ${\n              decisionEnabled ? '' : 'disabled'\n            }`}\n          >\n            Add Decision\n          </div>\n        </div>\n        <div className='Toolbar-edit-options'>\n          <div onClick={this.handleRemove} className='btn'>\n            Undo\n          </div>\n          <div onClick={this.handleSave} className='btn mr-0'>\n            Save\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Toolbar\n","import React, { Component } from 'react'\nimport './Sidebar.scss'\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchText: '',\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(evt) {\n    this.setState({ searchText: evt.target.value })\n  }\n  render() {\n    let list\n    let { items } = this.props\n    if (!items) {\n      list = <div className='Placeholder'>Add an activity</div>\n    } else {\n      let filteredList = items.filter(\n        (el) => el.task.indexOf(this.state.searchText.toLowerCase()) !== -1\n      )\n      if (filteredList.length === 0) {\n        list = <div className='No-results'>No tasks found</div>\n      } else {\n        list = filteredList.map((item, idx) => {\n          return (\n            <li key={idx} className='Activity'>\n              Task: {item.task}, [x:{item.x},y:{item.y}]\n            </li>\n          )\n        })\n      }\n    }\n\n    return (\n      <div className='Sidebar'>\n        <div className='Sidebar-search mt-4'>\n          <input\n            onChange={this.handleChange}\n            value={this.state.searchText}\n            type='text'\n            placeholder='SEARCH'\n          />\n        </div>\n        <div className='Sidebar-items mt-5'>\n          <ul>{list}</ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\nimport './App.css'\nimport Toolbar from './Components/Toolbar'\nimport Sidebar from './Components/Sidebar'\n\nconst ACTIVITY_BOX_WIDTH = 120\nconst ACTIVITY_BOX_HEIGHT = 60\nconst ACTIVITY_BOX_COLOR = 'blue'\nconst WIDTH_DESICION_BOX = 40\nconst HEIGHT_DESICION_BOX = 40\nconst DESICION_BOX_COLOR = 'green'\nconst X_STARTING_POINT = 10\nconst Y_STARTING_POINT = 100\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      decisionOption: false,\n    }\n    this.draw = this.draw.bind(this)\n    this.addActivity = this.addActivity.bind(this)\n    this.addDecision = this.addDecision.bind(this)\n    this.remove = this.remove.bind(this)\n    this.save = this.save.bind(this)\n    this.addFirstActivity = this.addFirstActivity.bind(this)\n  }\n  draw() {\n    const canvas = document.getElementById('myCanvas')\n    if (canvas.getContext) {\n      const ctx = canvas.getContext('2d')\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      ctx.fillStyle = 'white'\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n      //draw boxes\n      if (this.state.items) {\n        let number = 0\n        for (let shape of this.state.items) {\n          if (shape.task === 'decision') {\n            ctx.strokeRect(shape.x, shape.y, shape.width, shape.height)\n          } else {\n            number++\n            ctx.fillStyle = shape.color\n            ctx.fillRect(shape.x, shape.y, shape.width, shape.height)\n            ctx.fillStyle = 'white'\n            ctx.font = 'bold 16px Courier'\n            ctx.fillText(`Activity ${number}`, shape.x + 10, shape.y + 30)\n          }\n        }\n        //draw lines\n        for (let i = 0; i < this.state.lines.length; i++) {\n          let { startPoint, lineTo } = this.state.lines[i]\n          ctx.beginPath()\n          ctx.moveTo(...startPoint)\n          ctx.lineTo(...lineTo)\n          ctx.stroke()\n        }\n      }\n    }\n  }\n  addFirstActivity() {\n    this.setState(\n      {\n        items: [\n          {\n            x: X_STARTING_POINT,\n            y: Y_STARTING_POINT,\n            width: ACTIVITY_BOX_WIDTH,\n            height: ACTIVITY_BOX_HEIGHT,\n            task: 'activity',\n            color: ACTIVITY_BOX_COLOR,\n          },\n        ],\n        lines: [\n          {\n            startPoint: [130, 130],\n            lineTo: [130, 130],\n          },\n        ],\n        decisionOption: true,\n      },\n      () => {\n        this.draw()\n      }\n    )\n  }\n  addActivity() {\n    console.log(this.state.items)\n    if (!this.state.items || this.state.items.length <= 0) {\n      this.addFirstActivity()\n      return\n    }\n    let { items, lines } = this.state\n    let refIndex = this.state.items.length - 1\n    let { x, y, task } = this.state.items[refIndex]\n    let spacing = task === 'decision' ? 50 : 100\n    let length = task === 'decision' ? WIDTH_DESICION_BOX : ACTIVITY_BOX_WIDTH\n    let newItem = {\n      x: x + length + spacing,\n      y: 100,\n      width: ACTIVITY_BOX_WIDTH,\n      height: ACTIVITY_BOX_HEIGHT,\n      task: 'activity',\n      color: ACTIVITY_BOX_COLOR,\n    }\n    let newLine = {\n      startPoint: [x + length, 100 + 30],\n      lineTo: [x + spacing + length, 100 + 30],\n    }\n    this.setState(\n      {\n        items: [...items, newItem],\n        lines: [...lines, newLine],\n        decisionOption: true,\n      },\n      () => {\n        this.draw()\n      }\n    )\n  }\n\n  addDecision() {\n    if (!this.state.items || this.state.items.length <= 0) {\n      return\n    }\n    let { items, lines } = this.state\n    let refIndex = this.state.items.length - 1\n    let { x, y, width, height, task } = this.state.items[refIndex]\n    //bug catch\n    if (task === 'decision') {\n      return\n    }\n    let spacing = 100\n    let newItem = {\n      x: x + 60 + spacing,\n      y: 110,\n      width: WIDTH_DESICION_BOX,\n      height: HEIGHT_DESICION_BOX,\n      task: 'decision',\n      color: DESICION_BOX_COLOR,\n    }\n    let newLine = {\n      startPoint: [x + 120, 100 + 30],\n      lineTo: [x + spacing + 60, 100 + 30],\n    }\n    this.setState(\n      {\n        items: [...items, newItem],\n        lines: [...lines, newLine],\n        decisionOption: false,\n      },\n      () => {\n        this.draw()\n      }\n    )\n  }\n  remove() {\n    let decisionOption\n    // first statement doesnt allow the user to remove the first task\n    if (this.state.items.length <= 0) {\n      return\n    }\n    let newItems = [...this.state.items]\n    let newLines = [...this.state.lines]\n    newItems.pop()\n    newLines.pop()\n    console.log(newItems)\n    if (\n      this.state.items.length === 1 ||\n      newItems[newItems.length - 1].task === 'decision'\n    ) {\n      decisionOption = false\n    } else {\n      decisionOption = true\n    }\n    this.setState(\n      {\n        items: [...newItems],\n        lines: [...newLines],\n        decisionOption: decisionOption,\n      },\n      () => {\n        this.draw()\n      }\n    )\n  }\n\n  save() {\n    window.localStorage.setItem('canvas-memory', JSON.stringify(this.state))\n  }\n\n  componentDidMount() {\n    this.draw()\n  }\n  render() {\n    return (\n      <div className='App container mt-5'>\n        <div className='small-screen-text d-flex-col text-center p-5'>\n          <p>Browser window is too small</p>\n          <p className='pt-4'>Please open on a desktop browser</p>\n          <p className='pt-4'>\n            {' '}\n            If you are using a desktop browser, please resize your browser\n            window\n          </p>\n        </div>\n        <div className='row main mb-5'>\n          <div className='col-9'>\n            <Toolbar\n              decisionEnabled={this.state.decisionOption}\n              addDecision={this.addDecision}\n              addActivity={this.addActivity}\n              remove={this.remove}\n              save={this.save}\n            />\n            <canvas id='myCanvas' width='800' height='500'></canvas>\n          </div>\n          <div className='main col-3'>\n            <Sidebar items={this.state.items} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}